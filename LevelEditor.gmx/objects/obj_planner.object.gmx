<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/////////////////////////////////////////Reads the text file////////////////////
num_levels = 0;
for(var t = 0; t &lt; 200;t++) level[t] = noone;
if(obj_filename.filename != ""){
    //open and read txt
    show_debug_message(obj_filename.filename);
    
    file = file_text_open_read(obj_filename.filename);
    
    var numlines = 0;
    while(!file_text_eof(file))
    {
        str[numlines] = file_text_read_string(file);
        file_text_readln(file);
        numlines++;
    }
    file_text_close(file);
    //make levels based on info
    var l = 0;
    
    for(var i = 0; i &lt; numlines;i++)
    {
        if(str[i] == "{")
        {
            i++;
            var tempstr = str[i];
            level[l] = instance_create(0,0,struct_level);
            level[l].number = l;
            var k = 0;
            while(tempstr != "}")
            {
                level[l].data[k] = tempstr;
                if(string_length(tempstr) &gt; level[l].width)level[l].width = string_length(tempstr);
                i++;
                tempstr = str[i];
                k++
            }
            level[l].height = k;
            l++;
        }
    }//for i
    //at this point level[n] is an array of pointers to struct_level objects
    num_levels = l;
    set_level_pos();
}
scroll_sp = 25;
selected = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(obj_trace_level)){
    var inst = obj_trace_level;
    if(inst.number == -1){//if it is a new level
        //add new level to array
        level[num_levels] = instance_create(0,0,struct_level);
        level[num_levels].width = obj_trace_level.width;
        level[num_levels].height = obj_trace_level.height;
        level[num_levels].data = obj_trace_level.data;
        level[num_levels].number = num_levels;
        with(obj_trace_level) {instance_destroy();}
        num_levels++; 
        set_level_pos();
    }else{//if it is an edit of an existing level
        level[inst.number].width = obj_trace_level.width;
        level[inst.number].height = obj_trace_level.height;
        level[inst.number].data = obj_trace_level.data;
        with(level[inst.number]){surface_free(face)};
        with(obj_trace_level) {instance_destroy();}
        set_level_pos();
    }
}
if(mouse_wheel_down()){
    if(view_yview[0] &lt; 768){
        view_yview[0] += scroll_sp;
    }
}
if(mouse_wheel_up()){
    if(view_yview[0] &gt; 0){
        view_yview[0] -= scroll_sp;
    }
}

if(mouse_check_button(mb_right)){
        with(base_smallbutton) {instance_destroy();}
        with(struct_level) {
            selected = false;
        }
        selected = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_rectangle( room_width-10,
                (view_yview[0]/768)*(768-20),
                room_width,
                20+( (view_yview[0]/768)*(768-20) ),
                false);
                                    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
