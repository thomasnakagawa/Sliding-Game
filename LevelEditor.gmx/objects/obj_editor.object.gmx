<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cursor = 1;
ghostx = 0;
ghosty = 0;

x1 = 0;
y1 = 0;
drawline = false;

inborder = false;

height = (room_height-64)/32;
width = (room_width)/32;
char = "";
for(var i = 0; i &lt; height;i++)
{
    data[i] = "";
}

background_color = c_white;
instance_create(832,10,obj_testbutton);
//instance_create(694,10,obj_editbutton);
instance_create(10,10,obj_buttonplayer);
instance_create(84,10,obj_buttontile);
instance_create(158,10,obj_buttonrock);
instance_create(232,10,obj_buttonkey);
instance_create(340,10,obj_donebutton);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(base_button){ instance_destroy();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(mouse_y &gt; 64) inborder = true; else inborder = false;
ghostx = round((mouse_x-16)/32)*32;
ghosty = round((mouse_y-16)/32)*32;

if(keyboard_check(ord('1')) || keyboard_check(ord('H')))
{
    cursor = 1;
}
if(keyboard_check(ord('2')) || keyboard_check(ord('J')))
{
    cursor = 2;
}
if(keyboard_check(ord('3')) || keyboard_check(ord('K')))
{
    cursor = 3;
}
if(keyboard_check(ord('4')) || keyboard_check(ord('L')))
{
    cursor = 4;
}
if(keyboard_check(vk_control) &amp;&amp; keyboard_check_pressed(ord('S')))
{
    read_level();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(inborder)
{
    if(x1 == ghostx &amp;&amp; y1 == ghosty)
    {
        //make individual
        place_piece(x1,y1);
    }
    else if(x1 == ghostx &amp;&amp; drawline)
    {
        //make v line
        var low = min(y1,ghosty);
        var top = max(y1,ghosty);
        for(var i = low; i &lt;= top; i+=32)
        {
            place_piece(x1,i);
        }
    }
    else if(y1 == ghosty &amp;&amp; drawline)
    {
        //make h line
        var low = min(x1,ghostx);
        var top = max(x1,ghostx);
        for(var i = low; i &lt;= top; i+=32)
        {
            place_piece(i,y1);
        }
    }
    else
    {
        //make individual
        place_piece(x1,y1);
    }
    drawline = false;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(inborder)
{
x1 = ghostx;
y1 = ghosty;
if(cursor == 2 || cursor == 3)drawline = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(var i = 0; i &lt; room_width; i += 32)
{
    draw_line(i,64,i,room_height);
}
for(var i = 64; i &lt; room_height; i += 32)
{
    draw_line(0,i,room_width,i);
}
if(inborder)
{
draw_sprite(spr_spot,0,ghostx,ghosty);

    if(drawline)
    {
        draw_circle_colour(x1+16,y1+16,3,c_lime,c_lime,false);
        if(x1 == ghostx || y1 == ghosty)
        {
            draw_line_width_colour(x1+16,y1+16,ghostx+16,ghosty+16,1,c_black,c_black);
            draw_circle_colour(x1+16,y1+16,3,c_lime,c_lime,false);
        }
        else
        {
            draw_circle_colour(ghostx+16,ghosty+16,3,c_red,c_red,false);
        }
    }   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="116">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
instance_create(0,0,obj_tester);
edit_to_test();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
